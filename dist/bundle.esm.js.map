{"version":3,"file":"bundle.esm.js","sources":["../src/index.js"],"sourcesContent":["import _ from 'lodash';\nimport Router from 'koa-router';\nimport bodyParser from 'koa-bodyparser';\n\nconst router = Router();\n\nfunction lift() {\n  this.app.use(bodyParser());\n  _.forEach((this.config.http || {}).middlewares || [], (middleware) => {\n    if (_.isFunction(middleware)) {\n      this.app.use(middleware());\n      return;\n    }\n\n    if (_.isArray(middleware)) {\n      let middlewareArr = _.map(middleware, (arg) => {\n        if (_.isFunction(arg)) {\n          return arg();\n        }\n        return arg;\n      });\n\n      this.app.use(middlewareArr);\n    }\n  });\n\n  _.forEach(this.config.routes, (action, key) => {\n    let method;\n    let pattern;\n    let index = key.indexOf(' ');\n    let allMethods = ['all', 'get', 'post', 'put', 'delete', 'patch'];\n\n    if (index > -1) {\n      let keyParts = [key.slice(0, index), key.slice(index + 1)];\n      method = (keyParts[0] || '').toLowerCase();\n      [, pattern] = keyParts;\n    }\n    else {\n      method = 'all';\n      pattern = key;\n    }\n\n    if (!_.includes(allMethods, method)) {\n      throw new Error(`invalid route method: ${method}`);\n    }\n\n    if (_.isFunction(action)) {\n      router[method](...[pattern].concat(action));\n      return;\n    }\n\n    let actionParts = action.split('.');\n    let controllerName = actionParts[0];\n    let controller = this.controllers[controllerName];\n\n    if (!controller) {\n      throw new Error(`undefined controller: ${controllerName}`);\n    }\n\n    let actionMethodName = actionParts[1];\n    let actionMethod = controller[actionMethodName].bind(controller);\n\n    if (!actionMethod) {\n      throw new Error(`undefined action method: ${action}`);\n    }\n\n    if ({}.toString.call(actionMethod) !== '[object AsyncFunction]') {\n      throw new Error('controller function need be async');\n    }\n\n    let wrapActionMethod = function wrapActionMethod(ctx, ...args) {\n      return actionMethod(...[ctx, ...args])\n        .then((data) => {\n          if (!ctx.body) {\n            ctx.body = data;\n          }\n          return data;\n        })\n        .catch((err) => {\n          global.logger.warn(err);\n          ctx.status = ctx.status || 400;\n        });\n    };\n\n    let policies =\n      (this.controllerActionPolicies &&\n        this.controllerActionPolicies[`${controllerName}.${actionMethodName}`]) ||\n      [];\n\n    router[method](...[pattern].concat(policies).concat(wrapActionMethod));\n  });\n\n  this.app.use(router.routes());\n  this.app.use(router.allowedMethods());\n}\n\nexport default lift;\n"],"names":["router","Router","lift","app","use","bodyParser","forEach","this","config","http","middlewares","middleware","_","isFunction","isArray","middlewareArr","map","arg","routes","action","key","method","pattern","index","indexOf","keyParts","slice","toLowerCase","includes","Error","concat","actionParts","split","controllerName","controller","controllers","actionMethodName","actionMethod","bind","toString","call","policies","controllerActionPolicies","ctx","args","then","data","body","catch","err","logger","warn","status","allowedMethods"],"mappings":"4FAIA,MAAMA,OAASC,SAEf,SAASC,YACFC,IAAIC,IAAIC,gBACXC,SAASC,KAAKC,OAAOC,UAAYC,gBAAoBC,OACjDC,EAAEC,WAAWF,QACVR,IAAIC,IAAIO,aAIXC,EAAEE,QAAQH,GAAa,KACrBI,EAAgBH,EAAEI,IAAIL,EAAaM,GACjCL,EAAEC,WAAWI,GACRA,IAEFA,QAGJd,IAAIC,IAAIW,QAIfT,QAAQC,KAAKC,OAAOU,OAAQ,CAACC,EAAQC,SACjCC,EACAC,EACAC,EAAQH,EAAII,QAAQ,QAGpBD,GAAS,EAAG,KACVE,GAAYL,EAAIM,MAAM,EAAGH,GAAQH,EAAIM,MAAMH,EAAQ,OAC7CE,EAAS,IAAM,IAAIE,gBAC1BL,GAAWG,SAGL,QACCL,MAGPR,EAAEgB,UAZW,MAAO,MAAO,OAAQ,MAAO,SAAU,SAY7BP,SACpB,IAAIQ,+BAA+BR,QAGvCT,EAAEC,WAAWM,sBACRE,OAAYC,GAASQ,OAAOX,QAIjCY,EAAcZ,EAAOa,MAAM,KAC3BC,EAAiBF,EAAY,GAC7BG,EAAa3B,KAAK4B,YAAYF,OAE7BC,QACG,IAAIL,+BAA+BI,SAGvCG,EAAmBL,EAAY,GAC/BM,EAAeH,EAAWE,GAAkBE,KAAKJ,OAEhDG,QACG,IAAIR,kCAAkCV,QAGP,8BAAhCoB,SAASC,KAAKH,SACb,IAAIR,MAAM,yCAiBdY,EACDlC,KAAKmC,0BACJnC,KAAKmC,4BAA4BT,KAAkBG,gBAGhDf,OAAYC,GAASQ,OAAOW,GAAUX,OAnBtB,SAA0Ba,KAAQC,UAChDP,MAAiBM,KAAQC,IAC7BC,KAAMC,IACAH,EAAII,SACHA,KAAOD,GAENA,IAERE,MAAOC,WACCC,OAAOC,KAAKF,KACfG,OAAST,EAAIS,QAAU,gBAY9BjD,IAAIC,IAAIJ,OAAOkB,eACff,IAAIC,IAAIJ,OAAOqD"}