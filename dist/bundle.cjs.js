"use strict";function _interopDefault(t){return t&&"object"==typeof t&&"default"in t?t.default:t}var _=_interopDefault(require("lodash")),Router=_interopDefault(require("koa-router")),bodyParser=_interopDefault(require("koa-bodyparser"));const router=Router();function lift(){this.app.use(bodyParser()),_.forEach((this.config.http||{}).middlewares||[],t=>{if(_.isFunction(t))this.app.use(t());else if(_.isArray(t)){let e=_.map(t,t=>_.isFunction(t)?t():t);this.app.use(e)}}),_.forEach(this.config.routes,(t,e)=>{let o,r,i=e.indexOf(" ");if(i>-1){let t=[e.slice(0,i),e.slice(i+1)];o=(t[0]||"").toLowerCase(),[,r]=t}else o="all",r=e;if(!_.includes(["all","get","post","put","delete","patch"],o))throw new Error(`invalid route method: ${o}`);if(_.isFunction(t))return void router[o](...[r].concat(t));let n=t.split("."),l=n[0],s=this.controllers[l];if(!s)throw new Error(`undefined controller: ${l}`);let a=n[1],u=s[a].bind(s);if(!u)throw new Error(`undefined action method: ${t}`);if("[object AsyncFunction]"!=={}.toString.call(u))throw new Error("controller function need be async");let c=this.controllerActionPolicies&&this.controllerActionPolicies[`${l}.${a}`]||[];router[o](...[r].concat(c).concat(function(t,...e){return u(...[t,...e]).then(e=>(t.body||(t.body=e),e)).catch(global.Errors,e=>{global.logger.warn(e),t.status=t.status||400,t.body=e}).catch(e=>{global.logger.warn(e),t.status=t.status||400})}))}),this.app.use(router.routes()),this.app.use(router.allowedMethods())}module.exports=lift;
//# sourceMappingURL=bundle.cjs.js.map
